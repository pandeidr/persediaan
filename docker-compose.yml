version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: persediaan_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: persediaan_accounting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - persediaan_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: persediaan_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: persediaan_accounting
      DB_USER: postgres
      DB_PASSWORD: postgres_password
      JWT_SECRET: your_super_secret_jwt_key_here
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - persediaan_network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: persediaan_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_BASE_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - persediaan_network

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: persediaan_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - persediaan_network

volumes:
  postgres_data:
    driver: local

networks:
  persediaan_network:
    driver: bridge